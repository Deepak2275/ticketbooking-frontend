{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91901\\\\ticket\\\\src\\\\components\\\\Trailer.jsx\";\nimport React, { useState } from \"react\";\nimport YouTube, { YouTubeProps } from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1200\n    },\n    items: 3,\n    slidesToSlide: 1 // optional, default to 1.\n  },\n\n  tablet: {\n    breakpoint: {\n      max: 1200,\n      min: 1100\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n  },\n\n  mobile: {\n    breakpoint: {\n      max: 900,\n      min: 0\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n  }\n};\n\nexport default function Trailer(props) {\n  const onPlayerReady = event => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  };\n  const opts = {\n    height: '300',\n    width: '300',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const videos = props.videos;\n  //console.log(videos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"youtube\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          borderRadius: \"10px\",\n          backgroundColor: \"#D8D9DA\",\n          padding: \"0 5px\"\n        },\n        children: \"Trailers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), videos !== null && videos.map(data => /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: data.key,\n      opts: opts,\n      onReady: onPlayerReady\n    }, data.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_c = Trailer;\nvar _c;\n$RefreshReg$(_c, \"Trailer\");","map":{"version":3,"names":["React","useState","YouTube","YouTubeProps","jsxDEV","_jsxDEV","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","Trailer","props","onPlayerReady","event","target","pauseVideo","opts","height","width","playerVars","autoplay","videos","className","children","style","borderRadius","backgroundColor","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","data","videoId","key","onReady","_c","$RefreshReg$"],"sources":["C:/Users/91901/ticket/src/components/Trailer.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport YouTube, { YouTubeProps } from \"react-youtube\";\r\n\r\nconst responsive = {\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1200 },\r\n    items: 3,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1200, min: 1100 },\r\n    items: 1,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 900, min: 0 },\r\n    items: 1,\r\n    slidesToSlide: 1, // optional, default to 1.\r\n  },\r\n};\r\n\r\nexport default function Trailer(props){\r\n    const onPlayerReady: YouTubeProps[\"onReady\"] = (event) => {\r\n      // access to player in all event handlers via event.target\r\n      event.target.pauseVideo();\r\n    };\r\n    const opts = {\r\n      height: '300',\r\n      width: '300',\r\n      playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n      },}\r\n    \r\n    const videos=props.videos;\r\n    //console.log(videos);\r\n    return (\r\n      <div className=\"youtube\">\r\n        <h4>\r\n          <strong\r\n            style={{\r\n              borderRadius: \"10px\",\r\n              backgroundColor: \"#D8D9DA\",\r\n              padding: \"0 5px\",\r\n            }}\r\n          >\r\n            Trailers\r\n          </strong>\r\n        </h4>\r\n\r\n        {videos !== null &&\r\n          videos.map((data) => (\r\n            <YouTube\r\n              videoId={data.key}\r\n              opts={opts}\r\n              key={data.key}\r\n              onReady={onPlayerReady}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n    \r\n}"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,IAAIC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,UAAU,GAAG;EACjBC,OAAO,EAAE;IACPC,UAAU,EAAE;MAAEC,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC;IACpCC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE,CAAC,CAAE;EACpB,CAAC;;EACDC,MAAM,EAAE;IACNL,UAAU,EAAE;MAAEC,GAAG,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC;IACpCC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE,CAAC,CAAE;EACpB,CAAC;;EACDE,MAAM,EAAE;IACNN,UAAU,EAAE;MAAEC,GAAG,EAAE,GAAG;MAAEC,GAAG,EAAE;IAAE,CAAC;IAChCC,KAAK,EAAE,CAAC;IACRC,aAAa,EAAE,CAAC,CAAE;EACpB;AACF,CAAC;;AAED,eAAe,SAASG,OAAOA,CAACC,KAAK,EAAC;EAClC,MAAMC,aAAsC,GAAIC,KAAK,IAAK;IACxD;IACAA,KAAK,CAACC,MAAM,CAACC,UAAU,CAAC,CAAC;EAC3B,CAAC;EACD,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MACV;MACAC,QAAQ,EAAE;IACZ;EAAE,CAAC;EAEL,MAAMC,MAAM,GAACV,KAAK,CAACU,MAAM;EACzB;EACA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBvB,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QACEwB,KAAK,EAAE;UACLC,YAAY,EAAE,MAAM;UACpBC,eAAe,EAAE,SAAS;UAC1BC,OAAO,EAAE;QACX,CAAE;QAAAJ,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EAEJV,MAAM,KAAK,IAAI,IACdA,MAAM,CAACW,GAAG,CAAEC,IAAI,iBACdjC,OAAA,CAACH,OAAO;MACNqC,OAAO,EAAED,IAAI,CAACE,GAAI;MAClBnB,IAAI,EAAEA,IAAK;MAEXoB,OAAO,EAAExB;IAAc,GADlBqB,IAAI,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGZ;AAACM,EAAA,GAzCuB3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}