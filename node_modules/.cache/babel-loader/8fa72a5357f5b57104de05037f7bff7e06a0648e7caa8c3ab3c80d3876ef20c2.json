{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91901\\\\ticket\\\\src\\\\components\\\\About.jsx\";\nimport React from \"react\";\nimport { MDBAccordion, MDBAccordionItem, MDBContainer } from \"mdb-react-ui-kit\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function About() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBContainer, {\n      className: \"mt-5\",\n      style: {\n        maxWidth: \"1000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBAccordion, {\n        alwaysOpen: true,\n        initialActive: 1,\n        children: [/*#__PURE__*/_jsxDEV(MDBAccordionItem, {\n          collapseId: 1,\n          headerTitle: \"about the website\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"This is the first item's accordion body.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".accordion-body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 46\n          }, this), \", though the transition does limit overflow.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBAccordionItem, {\n          collapseId: 2,\n          headerTitle: \"What is the technology stack used \",\n          children: [\"Front-end technologies such as\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" HTML, CSS, JS and React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), \" to create the user interface and handle client-side interactions.\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Node.js \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \"as the server-side runtime environment to handle server-side processing and communicate with movies API to retrieve information.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBAccordionItem, {\n          collapseId: 3,\n          headerTitle: \"Creator of the project\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Sasi Chandan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","MDBAccordion","MDBAccordionItem","MDBContainer","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","About","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","maxWidth","alwaysOpen","initialActive","collapseId","headerTitle","_c","$RefreshReg$"],"sources":["C:/Users/91901/ticket/src/components/About.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { MDBAccordion, MDBAccordionItem, MDBContainer } from \"mdb-react-ui-kit\";\r\nimport Nav from \"./Nav\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <MDBContainer className=\"mt-5\" style={{ maxWidth: \"1000px\" }}>\r\n        <MDBAccordion alwaysOpen initialActive={1}>\r\n          <MDBAccordionItem collapseId={1} headerTitle=\"about the website\">\r\n            <strong>This is the first item's accordion body.</strong> It is\r\n            shown by default, until the collapse plugin adds the appropriate\r\n            classes that we use to style each element. These classes control the\r\n            overall appearance, as well as the showing and hiding via CSS\r\n            transitions. You can modify any of this with custom CSS or\r\n            overriding our default variables. It's also worth noting that just\r\n            about any HTML can go within the <code>.accordion-body</code>,\r\n            though the transition does limit overflow.\r\n          </MDBAccordionItem>\r\n          <MDBAccordionItem\r\n            collapseId={2}\r\n            headerTitle=\"What is the technology stack used \"\r\n          >\r\n            Front-end technologies such as\r\n            <strong> HTML, CSS, JS and React</strong> to create the user\r\n            interface and handle client-side interactions.\r\n            <strong> Node.js </strong>as the server-side runtime environment to\r\n            handle server-side processing and communicate with movies API to\r\n            retrieve information.\r\n          </MDBAccordionItem>\r\n          <MDBAccordionItem collapseId={3} headerTitle=\"Creator of the project\">\r\n           <div>\r\n           <strong> Sasi Chandan</strong>\r\n           </div>\r\n          </MDBAccordionItem>\r\n        </MDBAccordion>\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,kBAAkB;AAC/E,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA,CAACF,GAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPR,OAAA,CAACH,YAAY;MAACY,SAAS,EAAC,MAAM;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAP,QAAA,eAC3DJ,OAAA,CAACL,YAAY;QAACiB,UAAU;QAACC,aAAa,EAAE,CAAE;QAAAT,QAAA,gBACxCJ,OAAA,CAACJ,gBAAgB;UAACkB,UAAU,EAAE,CAAE;UAACC,WAAW,EAAC,mBAAmB;UAAAX,QAAA,gBAC9DJ,OAAA;YAAAI,QAAA,EAAQ;UAAwC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,8WAMxB,eAAAR,OAAA;YAAAI,QAAA,EAAM;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,gDAE/D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC,eACnBR,OAAA,CAACJ,gBAAgB;UACfkB,UAAU,EAAE,CAAE;UACdC,WAAW,EAAC,oCAAoC;UAAAX,QAAA,GACjD,gCAEC,eAAAJ,OAAA;YAAAI,QAAA,EAAQ;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,sEAEzC,eAAAR,OAAA;YAAAI,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,oIAG5B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC,eACnBR,OAAA,CAACJ,gBAAgB;UAACkB,UAAU,EAAE,CAAE;UAACC,WAAW,EAAC,wBAAwB;UAAAX,QAAA,eACpEJ,OAAA;YAAAI,QAAA,eACAJ,OAAA;cAAAI,QAAA,EAAQ;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACf,CAAC;AAEP;AAACQ,EAAA,GApCuBb,KAAK;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}