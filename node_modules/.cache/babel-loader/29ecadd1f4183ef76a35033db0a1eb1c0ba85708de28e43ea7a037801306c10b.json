{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91901\\\\ticket\\\\src\\\\components\\\\Plot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = props => {\n  _s();\n  const [text, setText] = useState(\"\"); // Your 100-word response here\n  const [visibleText, setVisibleText] = useState(\"\");\n  const [isTypingFinished, setIsTypingFinished] = useState(false);\n  useEffect(() => {\n    const words = text.split(\" \");\n    let index = 0;\n    let interval;\n    if (!isTypingFinished) {\n      interval = setInterval(() => {\n        setVisibleText(prevVisibleText => prevVisibleText + words[index] + \" \");\n        index++;\n        if (index >= words.length) {\n          setIsTypingFinished(true);\n          clearInterval(interval);\n        }\n      }, 150);\n      return () => clearInterval(interval);\n    }\n  }, [text, isTypingFinished]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plotdata\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: visibleText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingAnimation, \"ZEfDmbCQbiI/qB+6Wgg43qNl3us=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingAnimation","props","_s","text","setText","visibleText","setVisibleText","isTypingFinished","setIsTypingFinished","words","split","index","interval","setInterval","prevVisibleText","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91901/ticket/src/components/Plot.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst TypingAnimation = (props) => {\r\n    \r\n  const [text, setText] = useState(\"\"); // Your 100-word response here\r\n  const [visibleText, setVisibleText] = useState(\"\");\r\n  const [isTypingFinished, setIsTypingFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const words = text.split(\" \");\r\n    let index = 0;\r\n    let interval;\r\n\r\n    if (!isTypingFinished) {\r\n      interval = setInterval(() => {\r\n        setVisibleText(\r\n          (prevVisibleText) => prevVisibleText + words[index] + \" \"\r\n        );\r\n\r\n        index++;\r\n        if (index >= words.length) {\r\n          setIsTypingFinished(true);\r\n          clearInterval(interval);\r\n        }\r\n      }, 150); \r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [text, isTypingFinished]);\r\n\r\n  return (\r\n    <div className=\"plotdata\">\r\n      <p>{visibleText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGN,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,QAAQ;IAEZ,IAAI,CAACL,gBAAgB,EAAE;MACrBK,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BP,cAAc,CACXQ,eAAe,IAAKA,eAAe,GAAGL,KAAK,CAACE,KAAK,CAAC,GAAG,GACxD,CAAC;QAEDA,KAAK,EAAE;QACP,IAAIA,KAAK,IAAIF,KAAK,CAACM,MAAM,EAAE;UACzBP,mBAAmB,CAAC,IAAI,CAAC;UACzBQ,aAAa,CAACJ,QAAQ,CAAC;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAMI,aAAa,CAACJ,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACT,IAAI,EAAEI,gBAAgB,CAAC,CAAC;EAE5B,oBACER,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBnB,OAAA;MAAAmB,QAAA,EAAIb;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCIF,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAmCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}